swagger: '2.0'
info:
  description: This is Mark Pfaff's Rest API for AD420.
  version: 1.0.0
  title: Rest API AD420
  termsOfService: 'http://markpfaff.com/'
  contact:
    email: markdpfaff@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: ad420.example.com
basePath: /v2
tags:
  - name: user
    description: Everything about your users
    externalDocs:
      description: Find out more
      url: 'http://markpfaff.com'
  - name: task
    description: Tasks for your users
schemes:
  - http
paths:
  /users:
    post:
      tags:
        - user
      summary: Add a new user
      description: ''
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success!
        '404':
          description: User not found
        '405':
          description: Invalid input
    get:
      tags:
        - user
      summary: Finds user by name
      description: ''
      operationId: findUserByName
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: Find user by name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username
  '/users/{userid}':
    get:
      tags:
        - user
      summary: Find user by ID
      description: ''
      operationId: readUserByID
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: ''
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid status value
    put:
      tags:
        - user
      summary: Update user
      description: ''
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: name that need to be updated
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Deletes a user
      description: ''
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  '/users/{userid}/tasks':
    get:
      tags:
        - task
      summary: Find user task by ID
      description: Returns a single task
      operationId: getTaskById
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: ID of user to get tasks
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: User Task not found
    post:
      tags:
        - task
      summary: Updates a user task in  with form data
      description: ''
      operationId: updateUserTaskWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: ID of user task that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the pet
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the pet
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
  '/users/{userid}/tasks/{taskid}':
    get:
      tags:
        - task
      summary: Find task by user and task IDs
      description: ''
      operationId: getTaskByUserTaskId
      produces:
        - application/json
      parameters:
        - name: taskid
          in: path
          description: ID of task that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
        - name: userid
          in: path
          description: ID of task that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: deleteTaskByUserID
      produces:
        - application/json
      parameters:
        - name: taskid
          in: path
          description: ID of the task that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: userid
          in: path
          description: ID of the user of the task that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
definitions:
  Task:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Task
    xml:
      name: Task
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://markpfaff.com'
